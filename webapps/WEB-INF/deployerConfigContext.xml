<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:c="http://www.springframework.org/schema/c"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:sec="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">


	<util:map id="authenticationHandlersResolvers">
		<entry key-ref="proxyAuthenticationHandler" value-ref="proxyPrincipalResolver" />
		<entry key-ref="primaryAuthenticationHandler" value-ref="primaryPrincipalResolver" />
	</util:map>

	<util:list id="authenticationMetadataPopulators">
		<ref bean="successfulHandlerMetaDataPopulator" />
		<ref bean="rememberMeAuthenticationMetaDataPopulator" />
	</util:list>


	<!-- <alias name="acceptUsersAuthenticationHandler" alias="primaryAuthenticationHandler" 
		/> -->
	<alias name="dataSource" alias="queryDatabaseDataSource" />
	<alias name="personDirectoryPrincipalResolver" alias="primaryPrincipalResolver" />


	<!-- <bean id="attributeRepository" class="org.jasig.services.persondir.support.NamedStubPersonAttributeDao" 
		p:backingMap-ref="attrRepoBackingMap" /> <util:map id="attrRepoBackingMap"> 
		<entry key="uid" value="uid" /> <entry key="eduPersonAffiliation" value="eduPersonAffiliation" 
		/> <entry key="groupMembership" value="groupMembership" /> <entry> <key><value>memberOf</value></key> 
		<list> <value>faculty</value> <value>staff</value> <value>org</value> </list> 
		</entry> </util:map> -->


	<bean id="queryDatabaseAuthenticationHandler" name="primaryAuthenticationHandler"
		class="org.jasig.cas.adaptors.jdbc.QueryDatabaseAuthenticationHandler">
	</bean>

	<bean id="attributeRepository" class="org.jasig.services.persondir.support.AccoutAttributeDao">
		<property name="jdbcTemplate">
			<ref bean="jdbcTemplate" />
		</property>
	</bean>


	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<constructor-arg ref="dataSource" />
	</bean>

	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<!-- 数据源驱动类可不写，Druid默认会自动根据URL识别DriverClass -->
		<property name="driverClassName" value="${jdbc.driver}" />

		<!-- 基本属性 url、user、password -->
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />

		<!-- 配置初始化大小、最小、最大 -->
		<property name="initialSize" value="${jdbc.pool.init}" />
		<property name="minIdle" value="${jdbc.pool.minIdle}" />
		<property name="maxActive" value="${jdbc.pool.maxActive}" />

		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="60000" />

		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />

		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="300000" />

		<property name="validationQuery" value="${jdbc.testSql}" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />

		<!-- 打开PSCache，并且指定每个连接上PSCache的大小（Oracle使用） <property name="poolPreparedStatements" 
			value="true" /> <property name="maxPoolPreparedStatementPerConnectionSize" 
			value="20" /> -->

		<!-- 配置监控统计拦截的filters -->
		<property name="filters" value="stat" />
	</bean>



	<alias name="serviceThemeResolver" alias="themeResolver" />

	<!-- <bean id="serviceRegistryDao" class="org.jasig.cas.services.JpaServiceRegistryDaoImpl" 
		p:registeredServices-ref="registeredServicesList" /> -->



	<!-- <alias name="jpaServiceRegistryDao" alias="serviceRegistryDao" /> -->
	<alias name="jsonServiceRegistryDao" alias="serviceRegistryDao" />

	<!-- <alias name="defaultTicketRegistry" alias="ticketRegistry" /> -->


	<!-- <alias name="defaultTicketRegistry" alias="ticketRegistry" /> -->
	<alias name="memcachedTicketRegistry" alias="ticketRegistry" />
	<!-- redis连接池 -->
	<!-- <bean id="redisTicketRegistry" class="ren.boot.cas.ticket.registry.RedisTicketRegistry" 
		p:client-ref="ticketRedisTemplate" p:tgtTimeout="28800" p:stTimeout="10" 
		/> <bean id="jedisConnFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory" 
		p:hostName="localhost" p:database="0" p:usePool="true" /> <bean id="ticketRedisTemplate" 
		class="ren.boot.cas.ticket.registry.TicketRedisTemplate" p:connectionFactory-ref="jedisConnFactory" 
		/> -->


	<alias name="ticketGrantingTicketExpirationPolicy" alias="grantingTicketExpirationPolicy" />
	<alias name="multiTimeUseOrTimeoutExpirationPolicy" alias="serviceTicketExpirationPolicy" />

	<alias name="anyAuthenticationPolicy" alias="authenticationPolicy" />
	<alias name="acceptAnyAuthenticationPolicyFactory" alias="authenticationPolicyFactory" />

	<bean id="auditTrailManager"
		class="org.jasig.inspektr.audit.support.Slf4jLoggingAuditTrailManager"
		p:entrySeparator="${cas.audit.singleline.separator:|}"
		p:useSingleLine="${cas.audit.singleline:false}" />

	<alias name="neverThrottle" alias="authenticationThrottle" />

	<util:list id="monitorsList">
		<ref bean="memoryMonitor" />
		<ref bean="sessionMonitor" />
	</util:list>

	<alias name="defaultPrincipalFactory" alias="principalFactory" />
	<alias name="defaultAuthenticationTransactionManager" alias="authenticationTransactionManager" />
	<alias name="defaultPrincipalElectionStrategy" alias="principalElectionStrategy" />
	<alias name="tgcCipherExecutor" alias="defaultCookieCipherExecutor" />
</beans>
